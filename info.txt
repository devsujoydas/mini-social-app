

https://www.figma.com/design/0ka1rI1AyX80tGHFKeypSV/3-Free-Social-Network-App-UI-Kit--Community-?node-id=5990-68545&p=f&t=xAWnWHJjrhbROCp4-0



post create korar somoy structure

{
  "_id": "ObjectId",
  "authorId": {
      "_id": "ObjectId",
      "name": "Memes Worlds",
      "username": "memesworlds",
      "profilePhoto": "https://example.com/profile.jpg"
  },
  "content": {
      "text": "Yeaaaaaa...",
      "postImageUrl": "https://example.com/post.jpg"
  },
  "createdAt": "2025-07-29T13:00:21.659Z",
  "updatedAt": null,
  "likes": [
      { "$oid": "6888c48e23e4fbd69d9ae5b0" },
      { "$oid": "685db079b29d4184b073b06c" }
  ],
  "comments": [],
  "shares": []
}



post get korar somoy structure
{
  "_id": "6888c5e523e4fbd69d9ae5b6",
  "author": {
      "_id": "683f2cf894b632b128068bb7",
      "name": "Memes Worlds",
      "username": "memesworlds",
      "profilePhoto": "https://example.com/profile.jpg"
  },
  "content": {
      "text": "Yeaaaaaa...",
      "postImageUrl": "https://example.com/post.jpg"
  },
  "createdAt": "2025-07-29T13:00:21.659Z",
  "updatedAt": null,
  "likes": [
      {
          "_id": "6888c48e23e4fbd69d9ae5b0",
          "name": "User One",
          "username": "userone",
          "profilePhoto": "https://example.com/userone.jpg"
      },
      {
          "_id": "685db079b29d4184b073b06c",
          "name": "User Two",
          "username": "usertwo",
          "profilePhoto": "https://example.com/usertwo.jpg"
      }
  ],
  "comments": [
      // ekhane comment schema er moto structure thakbe
  ],
  "shares": [
      // jodi share thake, user info shoho
  ]
}



app.get("/posts", verifyJWT, async (req, res) => {
  try {
    const count = await postsCollection.countDocuments();

    const posts = await postsCollection.aggregate([
      // 1. Random posts
      { $sample: { size: count } },

      // 2. Author info আনবো
      {
        $lookup: {
          from: "users",
          localField: "authorId",
          foreignField: "_id",
          as: "author"
        }
      },
      { $unwind: "$author" },

      // 3. Likes info আনবো
      {
        $lookup: {
          from: "users",
          localField: "likes",
          foreignField: "_id",
          as: "likes"
        }
      },

      // 4. দরকারি ফিল্ডগুলোই নেবো + custom rename
      {
        $project: {
          content: 1,
          createdAt: 1,
          updatedAt: 1,
          shares: 1,
          comments: 1,

          // Author restructure
          author: {
            _id: "$author._id",
            name: "$author.name",
            username: "$author.username",
            profilePhoto: "$author.profilephotourl"
          },

          // Likes restructure
          likes: {
            $map: {
              input: "$likes",
              as: "u",
              in: {
                _id: "$$u._id",
                name: "$$u.name",
                username: "$$u.username",
                profilePhoto: "$$u.profilephotourl"
              }
            }
          }
        }
      }
    ]).toArray();

    res.send(posts);
  } catch (error) {
    console.error("Error getting random posts:", error);
    res.status(500).send("Failed to fetch random posts");
  }
});


old onstatechange 
// useEffect(() => {
  //   const unSubscribe = onAuthStateChanged(auth, async (currentUser) => {
  //     if (!currentUser?.email) {
  //       setUser(null);
  //       setUserData(null);
  //       setLoading(false);
  //       return;
  //     }

  //     setUser(currentUser);
  //     const email = currentUser.email;
  //     localStorage.setItem("email", email);

  //     try {
  //       // ১. JWT generate
  //       await axiosInstance.post("/jwt", { email });

  //       // ২. Parallel API calls
  //       const [
  //         profileRes,
  //         [friendsDataRes, myFriendsRes, sentReqRes, reqRes, youMayKnowRes],
  //         postsRes, savedPostsRes,
  //       ] = await Promise.all([
  //         axiosInstance.get(`/profile/${email}`),
  //         Promise.all([
  //           axiosInstance.get(`/allUsers?email=${email}`),
  //           axiosInstance.get(`/myfriends?email=${email}`),
  //           axiosInstance.get(`/sentrequest?email=${email}`),
  //           axiosInstance.get(`/requests?email=${email}`),
  //           axiosInstance.get(`/youMayKnow?email=${email}`),
  //         ]),
  //         axiosInstance.get("/posts"),
  //         axiosInstance.get(`/savedPosts?email=${email}`),
  //       ]);

  //       // ৩. Set all states
  //       const profileData = profileRes.data;
  //       setUserData(profileData);
  //       localStorage.setItem("currentUser", JSON.stringify(profileData));

  //       setFriendsData(friendsDataRes.data);
  //       setMyFriends(myFriendsRes.data);
  //       setSentRequests(sentReqRes.data);
  //       setFriendRequests(reqRes.data);
  //       setYouMayKnowFriends(youMayKnowRes.data);

  //       setPostsData(postsRes.data);
  //       setUsersPostsData(
  //         postsRes.data.filter((post) => post.author._id === profileData._id)
  //       );

  //       setSavedPosts(savedPostsRes.data);

  //       // ৪. Active ping interval
  //       const ping = async () => {
  //         try {
  //           await axiosInstance.post(`/activeStatus?email=${email}`);
  //         } catch (err) {
  //           console.error("Active ping error:", err);
  //         }
  //       };

  //       ping(); // প্রথমবার ping
  //       const interval = setInterval(ping, 2000);

  //       // ৫. Loading complete
  //       setLoading(false);

  //       // Cleanup interval on unmount or user change
  //       return () => clearInterval(interval);
  //     } catch (err) {
  //       console.error("JWT / Data fetch error:", err);
  //       setLoading(false);
  //     }
  //   });

  //   // Cleanup listener on unmount
  //   return () => unSubscribe();
  // }, []);

